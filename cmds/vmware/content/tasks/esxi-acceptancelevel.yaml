---
Name: "esxi-acceptance-level"
Description: "Set the ESXi software VIB install acceptanceLevel"
Documentation: |
  This task will set ESXi node software VIB install acceptanceLevel.  NOTE
  that as per VMware defined policies and behavior, you may NOT set the
  acceptanceLevel to a level any higher than the lowest level install software
  VIB package.

  Currently, the RackN DRP-Agent and DRP-Firewall-Ruleset VIBs require that the
  acceptanceLevel be set at ``CommunitySupported``.  If these components are
  installed (as they are by default) you will not be able to raise the level.

  The default value is ``CommunitySupported``.  The supported values are (from
  highest to lowest):

    * VMwareCertified
    * VMwareAccepted
    * PartnerSupported
    * CommunitySupported

  For more details, please see the VMware knoweldge base article:

    https://docs.vmware.com/en/VMware-vSphere/6.7/com.vmware.vsphere.security.doc/GUID-751034F3-5337-4DB2-8272-8DAC0980EACA.html

Meta:
  icon: "cloud"
  color: "yellow"
  title: "Digital Rebar"
Templates:
  - Name: "esxi-acceptancelevel"
    Contents: |
      #!/usr/bin/env sh
      # set the ESXi software VIB install acceptance level

      function xiterr() { [[ $1 =~ ^[0-9]+$ ]] && { XIT=$1; shift; } || XIT=1; printf "FATAL: $*\n"; exit $XIT; }

      ###
      #  NOTES:
      #
      #         The acceptanceLevel can not be set any higher thatn the LOWEST
      #         level of software VIB installed.  For DRP-Agent and DRP-FirewallRuleset
      #         installed, this means the acceptanceLevel MUST be set to CommunitySupported.
      #
      #         In the future, get the installed software VIB levels currently on the sytem:
      #         localcli software vib list | tail +3 | awk ' { print $3 } ' | sort -u
      #
      #         Assign them a value of 1, 2, 3, 4 for the high to low levels:
      #             VMwareCertified
      #             VMwareAccepted
      #             PartnerSupported
      #             CommunitySupported
      #
      #         Check the current level (returns one of the above strings):
      #         localcli software acceptance get
      #
      #         Determine if the level is changeable to the level the Operator requested, based
      #         on the LOWEST level of currently installed software.  If not - handle error
      #         appropriately.
      ###

      # if the operator installs a level higher than lowest level installed software, this
      # command WILL FAIL - until the above rules in NOTES are implemented
      localcli software acceptance set --level {{ .Param "esxi/acceptance-level" }}
