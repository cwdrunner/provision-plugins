#
# VMware vSphere ESXi Kickstart - Python 3 based
#

# Accept the VMware End User License Agreement
vmaccepteula

# Set the root password for the DCUI and Tech Support Mode
rootpw --iscrypted {{if .ParamExists "provisioner-default-password-hash"}}{{ .Param "provisioner-default-password-hash" }}{{else}}$6$rebar$HBaBj/uDmsQMEw4Si6eja9Yba3rhB73Na36hbrp9KxDHm6s5veeWyXlsUkoxRACtP47978iiidziRdsYUC7gC/{{end}}

# ESXi license to apply to the system
{{if .ParamExists "esxi/license"}}serialnum --esx={{ .Param "esxi/license" }}{{else}}# no license specified, installing in evaluation mode{{end}}

{{ if .ParamExists "esxi/disk-install-override" -}}
# Using esxi/disk-install-override (set to strategey of '{{.Param "esxi/disk-install-override"}}').
# Directive will append to the '/tmp/kickstart-customizations.cfg' file.
{{ else -}}
# Install on the first local disk available on machine (defaults to
# "--firstdisk --overwritevmfs")
install {{ .Param "esxi/disk-install-options" }}
{{ end -}}

# created in the %pre section, which runs before the kickstart is processed
%include /tmp/kickstart-customizations.cfg

# include any custom kickstart directive templates
{{ template "esxi-ks-custom-kickstart.tmpl" .}}

{{ if eq (.Param "esxi/skip-reboot") true -}}
# Param "esxi/skip-reboot" requested no reboot
{{ else -}}
reboot --noeject
{{ end -}}

###
### end of kickstart directives
### begin pre/post/firstboot sections#
###
### NO MORE COMMENTS AFTER THIS POINT UNLESS THEY ARE NEXT TO A
### SPECIFIC pre/post/firstboot section
###

%pre --interpreter=busybox
# Set the network according to the "esxi/network-type" (default is "dhcp")
# Also set /tmp/install-override if Param "esxi/disk-install-override" set
{{ template "esxi-network-kickstart.tmpl" .}}

{{ if .ParamExists "esxi/disk-install-override" }}{{ template "esxi-disk-install-override.tmpl" .}}{{ end }}

%post --interpreter=python
{{ template "esxi-render-firewall-vib.py.tmpl" .}}

%post --interpreter=python
{{ template "esxi-drpy-vib-render.py.tmpl" .}}

%firstboot --interpreter=python
{{ template "esxi-render-firewall-vib.py.tmpl" .}}

%firstboot --interpreter=python
{{ template "esxi-drpy-vib-render.py.tmpl" .}}

{{ template "esxi-ks-custom-sections.tmpl" .}}

%post --interpreter=python
{{ template "esxi-drpy-run.py.tmpl" .}}

%firstboot --interpreter=busybox
# This is backgrounded to allow for the system to stablize and installations to finish
RB="/opt/rackn/drpy"
RA="$RB/agent"
RD="$RB/bin"
RP="$RD/esxi-drp-run.py"
RC=/etc/rc.local.d/local.sh
head -n -1 $RC > /tmp/install-agent
cat >> /tmp/install-agent <<EOF
mkdir -p $RD
cat >> $RP <<INSIDEEOF
{{template "esxi-drpy-run.py.tmpl" .}}
INSIDEEOF
chmod +x $RP
/bin/nohup $RP &
exit 0
EOF
cp /tmp/install-agent $RC

%firstboot --interpreter=busybox
{{ if eq (.Param "esxi/drp-port-disable") true -}}
# disable the DRP API outbound port access if requested
# NOTE: this should be run last - as actions above require API port access
#       during the install
esxcli network firewall ruleset set --ruleset-id=dr-provision --enabled=false
{{ else -}}
echo "ESXi Firewall rule left enabled since not disabled by 'esxi/drp-port-disable' Param."
{{ end -}}
