#!/usr/bin/env bash
# install VMware vCenter appliance (VCSA)

###
#  This install script was borrowed and heavily adapted from the
#  excellent work of William Lam at VMware.  The original can be
#  found here:
#      Site: www.virtuallyghetto.com
#      Reference: http://www.virtuallyghetto.com/2015/01/ultimate-automation-guide-to-deploying-vcsa-6-0-part-1-embedded-node.html
###
function xiterr() { [[ $1 =~ ^[0-9]+$ ]] && { XIT=$1; shift; } || XIT=1; printf "FATAL: $*\n"; exit $XIT; }

OVFTOOL=$(which ovftool || xiterr 1 "Unable to locate 'ovftool'")

# locations supported: filepath, http, https, ftp, vsphere or vcd locater path
# doc: https://www.vmware.com/support/developer/ovf/ovftool-430-userguide.pdf
VCSA_OVA="http://get.rebar.digital/images/vmware/VMware-vCenter-Server-Appliance-6.7.0.21000-11726888_OVF10.ova"

ESXI_HOST=${1:-"192.168.124.112"}
ESXI_USERNAME="root"
ESXI_PASSWORD="RocketSkates"
VM_NETWORK="VM Network"
VM_DATASTORE="datastore1"

# Configurations for VC Management Node
VCSA_VMNAME="vcsa-embedded"
VCSA_ROOT_PASSWORD="RocketSkates"
VCSA_NETWORK_MODE="static"
VCSA_NETWORK_FAMILY="ipv4"
## IP Network Prefix (CIDR notation)
VCSA_NETWORK_PREFIX="24"
## Same value as VCSA_IP if no DNS
VCSA_HOSTNAME="192.168.124.200"
VCSA_IP="192.168.124.200"
VCSA_GATEWAY="192.168.124.1"
VCSA_DNS="8.8.8.8"
VCSA_ENABLE_SSH="True"
VCSA_DEPLOYMENT_SIZE="tiny"

# Configuration for SSO
SSO_DOMAIN_NAME="digitalrebar.local"
SSO_SITE_NAME="vcenter"
SSO_ADMIN_PASSWORD="RocketSkates"

# NTP Servers
NTP_SERVERS="0.pool.ntp.org"

### DO NOT EDIT BEYOND HERE ###

MAJ=$("${OVFTOOL}" --version | awk ' { print $3 } ' | cut -d "." -f1)
if [ $MAJ -lt 4 ]; then
        echo "This script requires ovftool 4.x.x ..."
        exit 1
fi

echo -e "\nDeploying vCenter Server Appliance Embedded w/PSC ${VCSA_VMNAME} ..."
"${OVFTOOL}" --acceptAllEulas --skipManifestCheck --X:injectOvfEnv --X:enableHiddenProperties \
--X:waitForIp --sourceType=OVA --powerOn --allowExtraConfig --noSSLVerify \
"--net:Network 1=${VM_NETWORK}" --datastore=${VM_DATASTORE} --diskMode=thin --name=${VCSA_VMNAME} \
"--deploymentOption=${VCSA_DEPLOYMENT_SIZE}" \
"--prop:guestinfo.cis.vmdir.domain-name=${SSO_DOMAIN_NAME}" \
"--prop:guestinfo.cis.vmdir.site-name=${SSO_SITE_NAME}" \
"--prop:guestinfo.cis.vmdir.password=${SSO_ADMIN_PASSWORD}" \
"--prop:guestinfo.cis.appliance.net.addr.family=${VCSA_NETWORK_FAMILY}" \
"--prop:guestinfo.cis.appliance.net.addr=${VCSA_IP}" \
"--prop:guestinfo.cis.appliance.net.pnid=${VCSA_HOSTNAME}" \
"--prop:guestinfo.cis.appliance.net.prefix=${VCSA_NETWORK_PREFIX}" \
"--prop:guestinfo.cis.appliance.net.mode=${VCSA_NETWORK_MODE}" \
"--prop:guestinfo.cis.appliance.net.dns.servers=${VCSA_DNS}" \
"--prop:guestinfo.cis.appliance.net.gateway=${VCSA_GATEWAY}" \
"--prop:guestinfo.cis.appliance.root.passwd=${VCSA_ROOT_PASSWORD}" \
"--prop:guestinfo.cis.appliance.ssh.enabled=${VCSA_ENABLE_SSH}" \
"--prop:guestinfo.cis.appliance.ntp.servers=${NTP_SERVERS}" \
${VCSA_OVA} "vi://${ESXI_USERNAME}:${ESXI_PASSWORD}@${ESXI_HOST}/"

echo "Checking to see if the VCSA endpoint https://${VCSA_IP}/ is ready ..."
until [[ $(curl --connect-timeout 30 -s -o /dev/null -w "%{http_code}" -i -k https://${VCSA_IP}/) -eq 200 ]];
do
	echo "Not ready, sleeping for 60sec"
	sleep 60
done
echo "VCSA Embedded Node (${VCSA_IP}) is now ready!"