#!/usr/bin/env bash
# Get the insecure 'esxi/insecure-password' and set it as 'provisioner-default-password-hash'

############
############ MUST RUN IN SLEDGEHAMMER (or other environment that has a DRP
############ Agent/Runner - ESXi does not have 'drpcli' Agent/Runner)
############

###
#  This is a horrible and simple template that allows an operator to
#  set a non-customizable insecure password to store on a machine (param
#  or profile).
#
#  The param will be converted to SHA512 hash version, and then set the
#  specified Machine "param" of "provisioner-default-password-hash"
#  and "esxi/insecure-password" will track the actual value.
#
#  The "provisioner-default-password-hash" value is used in various
#  kickstart/preseed/image install stages to inject a password to the
#  root or admin users.
#
#  The goal is to demonstrate a (future) path to get a password from a
#  remote service (eg password keeper, secrets vault, etc.), and then
#  use it for the installation.  Additional features may also allow
#  for the system to generate a random password, and remotely record
#  it in the password keeper, vault, etc...
###

{{ template "setup.tmpl" . }}

{{ if .ParamExists "esxi/insecure-password-override" }}
PASS="{{ .Param "esxi/insecure-password-override"}}"
{{ else if .ParamExists "esxi/insecure-password" }}
PASS="{{ .Param "esxi/insecure-password"}}"
{{ else if eq (.Param "esxi/generate-random-password" ) true -}}
PASS=$(
python -c '
{{ template "passgen.py.tmpl" .}}
')
PASS="a${PASS}a"
{{ else -}}
echo "No insecure password ('esxi/insecure-password' and 'esxi/insecure-password-override') defined, or no random requested ('esxi/generate-random-password' = true) setup ..."
exit 0
{{ end -}}

[[ -n "$RS_DEBUG_ENABLE" ]] && echo "DEBUG:  'PASS' value to be set to '$PASS'."

{{ if .ParamExists "esxi/insecure-password" -}}
drpcli machines remove {{.Machine.UUID}} param "esxi/insecure-password" || :
{{ end -}}

if [[ -n "$PASS" ]]; then
  drpcli machines add {{.Machine.UUID}} param "esxi/insecure-password" to "$PASS"
  CRYPT=$(python -c "import crypt; print crypt.crypt('$PASS', crypt.mksalt(crypt.METHOD_SHA512))")
  echo "Recording password hash on DRP Endpoint for Machine {{.Machine.UUID}}"
  echo "Some day we might send this to some other external system ... "
  {{ if .ParamExists "provisioner-default-password-hash" -}}
  drpcli machines remove {{.Machine.UUID}} param "provisioner-default-password-hash" || :
  {{ end -}}
  drpcli machines add {{.Machine.UUID}} param "provisioner-default-password-hash" to "$CRYPT"
else
  echo "FATAL: 'PASS' value in 'esxi-set-insecure-password.sh.tmpl' template was empty."
  echo "       Somehow the 'passgen.py.tmpl' failed to produce a password string, the"
  echo "       or either 'esxi/insecure-password-override' or 'esxi/insecure-password' were"
  echo "       added to the machine with an empty value."
  exit 1
fi
