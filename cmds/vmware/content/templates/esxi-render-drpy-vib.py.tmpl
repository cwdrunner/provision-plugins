#!/usr/bin/env python3
# Install the DRPY VIB on the system


import base64, sys, os

rackn_dir = "{{ .Param "esxi/install-datastore" }}/rackn"
if not os.path.isdir(rackn_dir):
    os.mkdir(rackn_dir)

agent_output_log = {{ if .ParamExists "esxi/drpy-agent-log" }}"{{ .Param "esxi/drpy-agent-log"}}"{{ else }}rackn_dir + "/drpy.log"{{ end }}

### set up our config file from templaets
conf_file_name = {{ if .ParamExists "esxi/drpy-agent-conf" }}"{{ .Param "esxi/drpy-agent-conf"}}"{{ else }}rackn_dir + "/drpy.conf"{{ end }}
print('Setting drpy-agent-conf file to: ' + conf_file_name)
# base64 encoded version of the DRPY VIB
conf_file_content = """{{ template "drpy-agent.conf.tmpl" .}}"""

if not conf_file_content:
  sys.exit('No DRPY conf file rendered from template "drpy-agent.conf.tmpl".')

try:
   with open(conf_file_name,"w+") as f:
        f.write(conf_file_content)
except Exception as e:
   print(str(e))

print("Wrote configuration file '" + conf_file_name + "' for Agent.")


### set up our base64 decoded VIB file from template (this is the VIB that contains the Agent)
vib_file_name = {{ if .ParamExists "esxi/vib-drpy-agent" }}"{{ .Param "esxi/vib-drpy-agent"}}"{{ else }}rackn_dir + "/drpy.vib"{{ end }}
print('Setting vib-drpy-agent to: ' + vib_file_name)
vib_file_content = """{{ template "DRP-Agent.vib.base64.tmpl" .}}"""

if not vib_file_content:
  sys.exit('No base64 encoded data found in template "drpy-agent-vib.base64.tmpl".')

try:
   vib_file_content=base64.b64decode(vib_file_content)
   with open(vib_file_name,"wb") as f:
        f.write(vib_file_content)
except Exception as e:
   print(str(e))

print("Wrote base64 decoded Agent VIB to '" + vib_file_name + "' file to be installed.")

print("Installing DRPY Agent VIB and starting Agent up ...")
os.system("localcli software vib install -v " + vib_file_name  + " -f")
print("Agent VIB install information:")
os.system("localcli software vib get --vibname DRP-Agent")

print("Starting agent to process workflow jobs with config file named '" + conf_file_name + "'.")
os.system('[[ -f "' + agent_output_log + '" ]] && mv ' + agent_output_log + ' ' + agent_output_log + '.$$ || echo "Creating new output logfile')
os.system('echo "--------------------------- $(date) ---------------------------" | tee -a ' + agent_output_log)
os.system("python /opt/rackn/drpy/agent -f " + conf_file_name + " >> " + agent_output_log + " 2>&1")
os.system('echo "--------------------------- $(date) ---------------------------" | tee -a ' + agent_output_log)
os.system("python /opt/rackn/drpy/agent -f " + conf_file_name + " >> " + agent_output_log + " 2>&1")

print("Completed processing workflow jobs. Agent exited.")

