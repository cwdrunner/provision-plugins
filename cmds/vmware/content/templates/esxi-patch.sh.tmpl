#!/usr/bin/env sh
# Update an ESXi installed instance to a set patch level.

# thank you ... vmware
$(which bash 2> /dev/null) && exec /usr/bin/env bash

function xiterr() { [[ $1 =~ ^[0-9]+$ ]] && { XIT=$1; shift; } || XIT=1; printf "FATAL: $*\n"; exit $XIT; }

# param expansion outside of 'range' unless use other constructs inside
MIRROR="{{ .Param "esxi/patch-mirror" }}"

{{ range $index, $build := .Param "esxi/patch-map" -}}

[[ $RS_DEBUG_ENABLE ]] && echo ">>>          INDEX:  {{$index}}"
[[ $RS_DEBUG_ENABLE ]] && echo ">>>   BUILD NUMBER:  {{$build}}"

BUILD_NUMBER="{{$index}}"
REL_NAME="{{$build.release_name}}"
FILE_NAME="{{$build.filename}}"
REBOOT_REQUIRED="{{$build.reboot_required}}"
LOCATION="{{$build.location}}"
CHECKSUM_TYPE="{{$build.checksum.type}}"
CHECKSUM_VALUE="{{$build.checksum.value}}"

[[ "$LOCATION" =~ ^\<no\ value\>$ ]] && LOCATION="${MIRROR}"
[[ -z "$LOCATION" ]] && xiterr "No download location specified (see 'esxi/patch-mirror' param)"

FMT="%16s: "
printf "$FMT %s\n" "BUILD_NUMBER" "$BUILD_NUMBER"
printf "$FMT %s\n" "REL_NAME" "$REL_NAME"
printf "$FMT %s\n" "FILE_NAME" "$FILE_NAME"
printf "$FMT %s\n" "REBOOT_REQUIRED" "$REBOOT_REQUIRED"
printf "$FMT %s\n" "LOCATION" "$LOCATION"
printf "$FMT %s\n" "CHECKSUM_TYPE" "$CHECKSUM_TYPE"
printf "$FMT %s\n" "CHECKSUM_VALUE" "$CHECKSUM_VALUE"
echo

{{ end -}}

exit 0

#  NOTES
#   maintenance mode
#   process the esxi/patches-to-apply array
#   for each patch lookup values in esxi/patch-map
#   build up the task list
#   insert "start task" (put in maint. mode)
#   need to handle the "reboot-required" case to the list
#   probably need a "reboot" task in between 
#   probably need a "finish" task which disables maint. mode

#wget {{ .ProvisionerURL }}/files/vmware/patches/ESXi670-201906002.zip -O /vmfs/volumes/datastore1/ESXi670-201906002.zip
wget http://192.168.124.1:8091/files/vmware/patches/ESXi670-201906002.zip -O 
/vmfs/volumes/datastore1/
ESXi670-201906002.zip

# put ESXi in maintenance mode
# NOTE - does not work in Weasel - not needed
vim-cmd hostsvc/maintenance_mode_enter

# install the patches/updates
# likely need to find the Vendor specific version of these to stage/use
# if in Weasel - do:
#localcli software acceptance set --level=CommunitySupported
esxcli software vib update -d 
/vmfs/volumes/datastore1/rackn/
ESXi670-201906002.zip

# next steps - verify the output:
#
#      The update completed successfully, but the system needs to be rebooted for changes to be effective.
#
# then:
#reboot

####### next boot steps - requires coordination with onetime script - or
####### preferably workflow

# return the system back to operational state
# maybe have the welcome/dcui splash screen rerun on next boot
# render the welcome script to VMFS rackn location - then twiddle the /etc/rc.local.d/local.sh to execute it

#vim-cmd hostsvc/maintenance_mode_exit


