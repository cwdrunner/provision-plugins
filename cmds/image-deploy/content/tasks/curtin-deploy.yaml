---
Name: "curtin-deploy"
Description: "A task to install an image through curtin."
Documentation: |
  A task to install an image through curtin.
OptionalParams:
- "image-deploy/windows-license-key"
- "curtin/partitions"
- "image-deploy/image-file"
- "image-deploy/image-url"
RequiredParams:
- "image-deploy/image-type"
- "image-deploy/image-os"
Templates:
#
# Cutrin config file.  This is rendered twice.
# one is the operational file.
# The second is in /root for debug
#
- ID: "curtin-config.yaml.tmpl"
  Name: "The base curtin config file"
  Path: "curtin_config.yaml"
- ID: "curtin-config.yaml.tmpl"
  Name: "The base curtin config file in root"
  Path: "/root/curtin_config.yaml"
#
# Linux set
#
- ID: "curtin-linux-runner.sh.tmpl"
  Path: "linux/drpcli.sh"
  Name: "Linux drpcli.sh"
- ID: "curtin-linux-runner-install.sh.tmpl"
  Path: "linux/drpcli-install.sh"
  Name: "Linux drpcli-install.sh"
- ID: "curtin-linux-python_wrapper.tmpl"
  Path: "linux/python_wrapper"
  Name: "Linux python_wrapper"
- ID: "curtin-centos-curtin-hooks.py.tmpl"
  Path: "centos/curtin-hooks.py"
  Name: "centos curtin-hooks.py"

#
# linux sub-type raw set
#
- ID: "curtin-basic-curtin-hooks.tmpl"
  Path: "raw/curtin-hooks"
  Name: "raw curtin hooks"

#
# Windows set
#
- ID: "curtin-windows-curtin-hooks.tmpl"
  Path: "windows/curtin-hooks"
  Name: "windows curtin-hooks"
- ID: "curtin-windows-runner.ps1.tmpl"
  Path: "windows/drpcli.ps1"
  Name: "Windows drpcli.ps1"
- ID: "curtin-windows-runner-install.bat.tmpl"
  Path: "windows/drpcli-install.bat"
  Name: "Windows drpcli-install.bat"
- ID: "curtin-windows-rackn.py.tmpl"
  Path: "windows/cloudbase-rackn.py"
  Name: "Windows cloudbase-rackn.py"
- ID: "curtin-windows-cloudinit-finalize.tmpl"
  Path: "windows/curtin-windows-cloudinit-finalize"
  Name: "Windows cloudinit finalize"

# The main installer script
- ID: "curtin-install.sh.tmpl"
  Name: "Install an image with curtin"
  Path: ""
Meta:
  icon: "image"
  color: "blue"
  title: "RackN Content"
  feature-flags: "sane-exit-codes"
